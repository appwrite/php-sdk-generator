part of {{ language.params.packageName }};

class FileInput {
  late final MultipartFile _multipartFile;

  MultipartFile get file => _multipartFile;

  FileInput._internal(MultipartFile multipartFile) {
    _multipartFile = multipartFile;
  }

  factory FileInput.fromBytes(
    List<int> value, {
    String? filename,
    MediaType? contentType,
  }) {
    return FileInput._internal(
      MultipartFile.fromBytes(
        value,
        filename: filename,
        contentType: contentType,
      ),
    );
  }

  factory FileInput.fromString(
    String value, {
    String? filename,
    MediaType? contentType,
  }) {
    return FileInput._internal(MultipartFile.fromString(
      value,
      filename: filename,
      contentType: contentType,
    ));
  }

  static Future<FileInput> fromFile(
    String filePath, {
    String? filename,
    MediaType? contentType,
  }) async =>
      FileInput._internal(await MultipartFile.fromFile(filePath,
          filename: filename, contentType: contentType));

  static FileInput fromFileSync(
    String filePath, {
    String? filename,
    MediaType? contentType,
  }) =>
      FileInput._internal(MultipartFile.fromFileSync(filePath,
          filename: filename, contentType: contentType));
}
